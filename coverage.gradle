allprojects {
    configurations { codacy }
    dependencies {
        codacy 'com.github.codacy:codacy-coverage-reporter:-SNAPSHOT'
    }
}

subprojects {
    apply plugin: 'kotlin'
}

apply plugin: 'jacoco'

task jacocoRootReport(type: JacocoReport) {
    additionalSourceDirs.from = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories.from = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.from = files(subprojects.sourceSets.main.output)
    executionData.from = subprojects.stream().map {fileTree(it.buildDir).include("/jacoco/*.exec")}.collect()
    reports {
        xml.enabled = true
    }
}

jacocoRootReport.dependsOn subprojects.test

task sendCoverageToCodacy(type: JavaExec) {
    main = "com.codacy.CodacyCoverageReporter"
    classpath = configurations.codacy
    args = ["report",
            "-l",
            "Kotlin",
            "-r",
            "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
    ]
}

sendCoverageToCodacy.dependsOn jacocoRootReport