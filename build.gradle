plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.21' apply false
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.21' apply false
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.21' apply false
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.3.21' apply false
    id 'org.jetbrains.kotlin.plugin.noarg' version '1.3.21' apply false
    id 'org.springframework.boot' version '2.1.1.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.6.RELEASE' apply false
}

group 'ru.nikstep'
version '1.0-SNAPSHOT'

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'jacoco'

    configurations { codacy }

    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/libs-release" }
        maven { url "https://jitpack.io" }
        maven { url "http://dl.bintray.com/typesafe/maven-releases" }
    }

    jacoco {
        toolVersion = "0.8.2"
    }

    dependencies {
        codacy 'com.github.codacy:codacy-coverage-reporter:-SNAPSHOT'
    }

    compileKotlin { kotlinOptions.jvmTarget = "1.8" }
    compileTestKotlin { kotlinOptions.jvmTarget = "1.8" }
}

subprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    bootJar.enabled = false
    jar.enabled = true

    jacocoTestReport {
        additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories = files(sourceSets.main.output)
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }

    dependencies {
        compile 'io.github.microutils:kotlin-logging:1.6.22'
        implementation 'com.beust:klaxon:5.0.1'

        testCompile 'org.mockito:mockito-inline:2.24.5'
        testCompile('com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0') {
            exclude group: 'org.jetbrains.kotlin'
            exclude group: 'org.mockito'
        }

        testCompile 'junit:junit:4.12'
        testCompile 'org.jetbrains.kotlin:kotlin-test'
        testCompile 'org.jetbrains.kotlin:kotlin-test-junit'
        testCompile "io.kotlintest:kotlintest:2.0.7"
        testCompile 'org.springframework.boot:spring-boot-starter-test'
        testCompile 'org.springframework.security:spring-security-test'
    }

    task sendCoverageToCodacy(type: JavaExec, dependsOn: jacocoTestReport) {
        main = "com.codacy.CodacyCoverageReporter"
        classpath = configurations.codacy
        args = [
                "report",
                "-l",
                "Kotlin",
                "-r",
                "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        ]
    }
}

task jacocoRootReport(type: JacocoReport) {
    def requiredSubprojects = subprojects.findAll { it.name in ['analysis', 'git'] }
    dependsOn = requiredSubprojects.sendCoverageToCodacy
}